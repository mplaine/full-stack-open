version: '3.8'

services:
  app:
    image: my-app-frontend-dev
    build:
      context: ./frontend/
      dockerfile: dev.Dockerfile
    volumes:
      - ./frontend/:/usr/src/app
      - /usr/src/app/node_modules
    # ports:
    #   - 5173:5173
    container_name: my-app-frontend-dev
    depends_on:
      - server
  nginx:
    image: nginx:1.25.3
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - server
  mongo:
    image: mongo
    # ports:
    #   - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./backend/mongo_data:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: 'mongodb://root:example@mongo:27017/'
    depends_on:
      - mongo
  server:
    image: my-app-backend-dev
    build:
      context: ./backend/
      dockerfile: dev.Dockerfile
    volumes:
      - ./backend/:/usr/src/app
      - /usr/src/app/node_modules
    # ports:
    #   - 3000:3000
    environment:
      - MONGODB_URI=mongodb://the_username:the_password@mongo:27017/blogApp
      - PORT=3000
      - SECRET=xvLIhg9xdjnnSdpomq1iz5NhIicQlfTe
      - TEST_MONGODB_URI=mongodb://the_username:the_password@mongo:27017/testBlogApp
    container_name: my-app-backend-dev
    depends_on:
      - mongo
